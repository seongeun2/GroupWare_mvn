<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "board.mybatis">

	<!-- 게시글 수 카운팅 -->
    <select id="getArticleCount"  resultType="int"  parameterType="hashmap">
		select nvl(count(*),0)  from board
			<if test="boardid != null">
				WHERE boardid = #{boardid}
			</if>
	 </select>
	 
	  <!-- 장효추가 -->
	  <!-- 게시글 수 카운팅  boardid 구분 없이  -->
    <select id="getArticleCountBoard"  resultType="int"  parameterType="hashmap">
		select nvl(count(*),0)  from board
	 </select>
	 
	 <!-- 게시글 수 카운팅 boardid 1번 -->
    <select id="getArticleCount1"  resultType="int"  parameterType="hashmap">
		select nvl(count(*),0)  from board WHERE boardid = 1 
	 </select>
	 
	 <!-- 게시글 수 카운팅 boardid 2번 -->
    <select id="getArticleCount2"  resultType="int"  parameterType="hashmap">
		select nvl(count(*),0)  from board WHERE boardid = 2
	 </select>
	 
	 



	 
	 <!-- 게시글 한개 불러오는 -->
      <select id="boardList"  resultType="Board"  parameterType="hashmap">
		select * from board
			<if test="num != null">
				WHERE num = #{num}
			</if>
			<if test="boardid != null">
				WHERE boardid = #{boardid}
			</if>
	 </select>
	 
	 


	 
	 <!-- 게시글 전체 가져오기  -->
	  <select id="getArticles"  resultType="Board"  parameterType="hashmap">
		 select * from 
			( select rownum rnum ,a.* 
			from (select num,writer,email,subject,passwd,
			reg_date,readcount,ref,re_step,re_level,content,
		 ip from board where boardid = #{boardid} order by ref desc 
		 , re_step) a ) where rnum  between #{startRow} and #{endRow}  
	 </select>
	 
	 <!-- 장효추가 -->
	 <!-- 게시글 전체 가져오기 boardid 구분 없이  -->
	  <select id="getArticlesboard"  resultType="Board"  parameterType="hashmap">
		 select * from 
			( select rownum rnum ,a.* 
			from (select num,writer,email,subject,passwd,
			reg_date,readcount,ref,re_step,re_level,content,
		 ip,boardid from board order by ref desc 
		 , re_step) a ) where rnum  between #{startRow} and #{endRow}  
	 </select>
	 
	 
	 <!-- 게시글 전체 가져오기 boardid 1번  -->
	  <select id="getArticles1"  resultType="Board"  parameterType="hashmap">
		select * from 
			( select rownum rnum ,a.* 
			from (select num,writer,email,subject,passwd,
			reg_date,readcount,ref,re_step,re_level,content,
		 ip from board where boardid = '1' order by ref desc 
		 , re_step) a ) where rnum  between #{startRow} and #{endRow} 
	 </select>
	 
	 <!--  <select id="getArticles1"  resultType="Board"  parameterType="hashmap">
		 select * from 
			( select rownum rnum ,a.* 
			from (select num,writer,email,subject,passwd,
			reg_date,readcount,ref,re_step,re_level,content,
		 ip from board where boardid = 1 order by ref desc 
		 , re_step) a ) where rnum  between #{startRow} and #{endRow}  
	 </select> -->
	 
	 <!-- 게시글 전체 가져오기 boardid 2번  -->
	  <select id="getArticles2"  resultType="Board"  parameterType="hashmap">
		select * from 
			( select rownum rnum ,a.* 
			from (select num,writer,email,subject,passwd,
			reg_date,readcount,ref,re_step,re_level,content,
		 ip from board where boardid = '2' order by ref desc 
		 , re_step) a ) where rnum  between #{startRow} and #{endRow} 
	 </select>
	
	 <!-- 추가 -->
	 <!-- 게시글 목록 가져오기- 공지목록  -->
	  <!-- <select id="getArticles2"  resultType="Board"  parameterType="hashmap">
		 select * from 
			( select rownum rnum ,a.* 
			from (select num,writer,email,subject,passwd,
			reg_date,readcount,ref,re_step,re_level,content,
		 ip from board where boardid = #{boardid} order by ref desc 
		 , re_step) a ) where rnum  between #{startRow} and #{endRow}  
	 </select> -->
	 
	 


	 <!-- 게시글 추가 -->
	 <insert id="insertBoard"   parameterType="Board">
			 	insert into board(num,writer,email,subject,
			 passwd,reg_date,
			ref,re_step,re_level,content,ip, boardid, filename, filesize) 
			values
			(#{num},#{writer},#{email},#{subject},
			 #{passwd},sysdate,
			#{ref},#{re_step},#{re_level},#{content},#{ip},
			 #{boardid}, #{filename}, #{filesize})
	 </insert>
	 
	 
	 
	 <!-- 추가 -->
	 <!-- 게시글 추가 - 공지글 -->
	 <!-- <insert id="insertBoard2"   parameterType="Board">
			 	insert into board(num,writer,email,subject,
			 passwd,reg_date,
			ref,re_step,re_level,content,ip, boardid, filename, filesize) 
			values
			(#{num},#{writer},#{email},#{subject},
			 #{passwd},sysdate,
			#{ref},#{re_step},#{re_level},#{content},#{ip},
			 #{boardid}, #{filename}, #{filesize})
	 </insert> -->



	 
	 
	 <!-- insert 시퀀스 -->
	 <select id="getNextNumber" resultType="int"  >
		 select boardser.nextval from dual
	 </select>


	<!-- 게시글 가져오기 -->
	<select id="getArticle" parameterType="hashmap" resultType="Board">
		select * from board where num 
		= #{num} and boardid = #{boardid}
	</select> 
	
	
	<!-- 게시글 수정 -->
	<update id="updateArticle"  parameterType="Board">
		update board set writer=#{writer},email=#{email},
				subject=#{subject} ,content=#{content} 
				where num=#{num} and passwd = #{passwd}
	</update>


 	<!-- 게시글 삭제 -->
	 <update id="deleteArticle"  parameterType="map">
		delete from board where num=#{num} and passwd = #{passwd}
	</update>


	 <!-- updateRe_step -->
	 <update id="updateRe_step"   parameterType="Board">
		 update board set re_step=re_step+1 
		  where ref= #{ref} and re_step> #{re_step} 
		  and boardid = #{boardid}	 
	 </update>

	 

	<!-- 게시글 카운팅 -->
	<update id="addReadCount"  parameterType="hashmap">
		update board set readcount=readcount+1 
		where num = #{num} and boardid = #{boardid}
	</update>	
	
	
	
</mapper>